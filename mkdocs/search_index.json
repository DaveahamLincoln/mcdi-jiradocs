{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome to the MCDI JIRA User Manual\n\n\nPlease use the links in the left-hand sidebar to navigate the site.\n\n\nYou can also search the docs using the searchbar in the top left.\n\n\nMCDI JIRA is currently on \nrelease 0.1.4.0", 
            "title": "Home"
        }, 
        {
            "location": "/#welcome-to-the-mcdi-jira-user-manual", 
            "text": "Please use the links in the left-hand sidebar to navigate the site.  You can also search the docs using the searchbar in the top left.  MCDI JIRA is currently on  release 0.1.4.0", 
            "title": "Welcome to the MCDI JIRA User Manual"
        }, 
        {
            "location": "/setup/", 
            "text": "Step 1: Set Firefox as your default browser.\n\n\nWhile JIRA is supported by all major browsers, MCDI's JIRA installation relies heavily on the \nSmart Attachments plugin\n, which only intuitively supports Internet Explorer and Firefox.  For the purposes of ensuring cross-platform functionality, security, and utility, MCDI IT \nstrongly\n recommends using Firefox.\n\n\nIf you are not sure how to set your default browser in Windows 10, you can follow the procedure displayed in \nthis video\n and select Firefox instead of Internet Explorer when you reach the Default Programs screen.\n\n\nAny existing Firefox installation should include the WebDAV Launcher and the required bindings to allow you to use the \"Edit in Office\" button when dealing with attachments.  However, if you should run into a problem with that function not working as intended, please refer to the steps under the \"Supported Browsers\" heading \nhere\n to resolve the issue.\n\n\nImagus Add-on\n\n\nIt is recommended that you install the \nImagus\n add-on for Firefox.  This add-on will give you the ability to view full-sized images by hovering over image thumbnails with your mouse.  It will make it easier for you to view the details of the screenshots contained within this manual.\n\n\nStep 2: Configure Outlook for JIRA\n\n\nDue to the way that JIRA parses Outlook emails, it is necessary for you to insert an escape string above your signature in Outlook before you start interacting with JIRA over email.  To do this, open the Outlook \"File\" menu and select \"Options.\"  You will see the following screen:\n\n\n\n\nClick \"Mail,\" which will take you to this screen:\n\n\n\n\nClick the \"Signatures...\" button, which will open this dialog:\n\n\n\n\nPlease modify your signature to include five minus signs above any existing text/pictures, as shown in the screenshot, then click \"OK.\"\n\n\nStep 3: Set up your JIRA account\n\n\nOnce IT has reviewed your JIRA permissions slip, you will receive the following email from JIRA inviting you to sign up:\n\n\n\n\nOnce you receive the email, click the \"Sign Up\" button, which will take you to the MCDI JIRA site, where you will see the following screen:\n\n\n\n\nDo not alter your username, simply make note of it, fill in your full name and create a password for yourself.  Once you have done so, click the \"Sign Up\" button.  This will take you to the following screen:\n\n\n\n\nEnter your username in the Username field, enter your password in the Password field, and click the \"Log In\" button.  The first time you log in, you will be taken through a number of configuration screens.  \n\n\nSelect your desired system language from this screen, and click \"Continue:\"\n\n\n\n\nPlease note that this selection will only apply to system messages and options\n- JIRA does not automatically translate comments made by users in other languages to your selected language.\n\n\nOnce you have selected your language, you will be asked to choose/create an avatar to visually represent you on the site.  Click \"Choose an avatar\" when the screen below appears.\n\n\n\n\nWhen you click the button, the following overlay will appear:\n\n\n\n\nHere, you can select from the default avatars, or upload a custom avatar.  If you choose to upload a custom avatar, please ensure that it is appropriate and \"safe for work.\"  \n\n\nOnce you have selected an avatar, the overlay will disappear, revealing the following screen:\n\n\n\n\nClick \"Next.\"  You will be moved to the screen below.\n\n\n\n\nClick \"Explore the current projects.\"  The following screen will appear:\n\n\n\n\nAt this stage, your account is set up, but you will only see the default projects which are available to all users.  This is normal, as IT cannot assign permissions to users until their account has been created for security reasons.\n\n\nOnce you have reached this screen, please notify IT that you have set up your account, and you will receive your assigned permissions as soon as possible.\n\n\nWhile you wait, please feel free to browse the other documentation provided on this site.", 
            "title": "Setup"
        }, 
        {
            "location": "/setup/#step-1-set-firefox-as-your-default-browser", 
            "text": "While JIRA is supported by all major browsers, MCDI's JIRA installation relies heavily on the  Smart Attachments plugin , which only intuitively supports Internet Explorer and Firefox.  For the purposes of ensuring cross-platform functionality, security, and utility, MCDI IT  strongly  recommends using Firefox.  If you are not sure how to set your default browser in Windows 10, you can follow the procedure displayed in  this video  and select Firefox instead of Internet Explorer when you reach the Default Programs screen.  Any existing Firefox installation should include the WebDAV Launcher and the required bindings to allow you to use the \"Edit in Office\" button when dealing with attachments.  However, if you should run into a problem with that function not working as intended, please refer to the steps under the \"Supported Browsers\" heading  here  to resolve the issue.", 
            "title": "Step 1: Set Firefox as your default browser."
        }, 
        {
            "location": "/setup/#imagus-add-on", 
            "text": "It is recommended that you install the  Imagus  add-on for Firefox.  This add-on will give you the ability to view full-sized images by hovering over image thumbnails with your mouse.  It will make it easier for you to view the details of the screenshots contained within this manual.", 
            "title": "Imagus Add-on"
        }, 
        {
            "location": "/setup/#step-2-configure-outlook-for-jira", 
            "text": "Due to the way that JIRA parses Outlook emails, it is necessary for you to insert an escape string above your signature in Outlook before you start interacting with JIRA over email.  To do this, open the Outlook \"File\" menu and select \"Options.\"  You will see the following screen:   Click \"Mail,\" which will take you to this screen:   Click the \"Signatures...\" button, which will open this dialog:   Please modify your signature to include five minus signs above any existing text/pictures, as shown in the screenshot, then click \"OK.\"", 
            "title": "Step 2: Configure Outlook for JIRA"
        }, 
        {
            "location": "/setup/#step-3-set-up-your-jira-account", 
            "text": "Once IT has reviewed your JIRA permissions slip, you will receive the following email from JIRA inviting you to sign up:   Once you receive the email, click the \"Sign Up\" button, which will take you to the MCDI JIRA site, where you will see the following screen:   Do not alter your username, simply make note of it, fill in your full name and create a password for yourself.  Once you have done so, click the \"Sign Up\" button.  This will take you to the following screen:   Enter your username in the Username field, enter your password in the Password field, and click the \"Log In\" button.  The first time you log in, you will be taken through a number of configuration screens.    Select your desired system language from this screen, and click \"Continue:\"   Please note that this selection will only apply to system messages and options - JIRA does not automatically translate comments made by users in other languages to your selected language.  Once you have selected your language, you will be asked to choose/create an avatar to visually represent you on the site.  Click \"Choose an avatar\" when the screen below appears.   When you click the button, the following overlay will appear:   Here, you can select from the default avatars, or upload a custom avatar.  If you choose to upload a custom avatar, please ensure that it is appropriate and \"safe for work.\"    Once you have selected an avatar, the overlay will disappear, revealing the following screen:   Click \"Next.\"  You will be moved to the screen below.   Click \"Explore the current projects.\"  The following screen will appear:   At this stage, your account is set up, but you will only see the default projects which are available to all users.  This is normal, as IT cannot assign permissions to users until their account has been created for security reasons.  Once you have reached this screen, please notify IT that you have set up your account, and you will receive your assigned permissions as soon as possible.  While you wait, please feel free to browse the other documentation provided on this site.", 
            "title": "Step 3: Set up your JIRA account"
        }, 
        {
            "location": "/layout/", 
            "text": "The purpose of this article is to serve as a guide to the structure of MCDI's JIRA installation.\n\n\nAtlassian Documentation\n\n\nMCDI's JIRA installation has been designed from the ground up to mirror the best-practice concepts for structural organization as outlined by Atlassian, in an effort to ensure that their system documentation is maximally compatible with our own.  In light of that fact, an effort has been made to include links to relevant articles within the Atlassian knowledge-base for further reading where possible.\n\n\nYou can view an overview of JIRA Core's structure here.\n\n\nQuick Reference\n\n\nThe following images are included as a quick reference guide for the key differences between JIRA and SharePoint.\n\n\nFigure 1- SharePoint Terms vs JIRA Terms:\n\n\n\n\nFigure 2- SharePoint Topology vs JIRA Topology:\n\n\n\n\nCategories\n\n\nCategories are collections of projects which share a common attribute.   As an example, the category\n\n\n\"MCDI Operations\"\n contains the following projects:\n\n\n\n\nand the category \n\"MCDI Projects\"\n contains the following projects:\n\n\n\n\nGiving projects a parent category designation allows for more precise sectioning of structure, allowing for the support of a diverse range of business units (BUs) within a single application.\n\n\n\n\nProjects\n\n\nProjects are roughly analogous to \"Departments\" or \"Business Functions\" within the application context.  Projects serve as \"buckets\" for issues (see below).  Each project has a long-form name, like\n\n\n\n\nBusiness Development\n\n\nFinance\n\n\nBenin ARM3\n\n\n\n\nand a short-form name (\"slug\") like\n\n\n\n\nBD\n\n\nFIN\n\n\nBARM3\n\n\n\n\nThe long-form name is utilized primarily for navigation within the UI, whereas the slug is used primarily for referencing issues.\n\n\n\n\nIssues\n\n\nThe most basic \"work packet\" in JIRA is the Issue.  There are multiple types of issues, which all serve different functions.  For more detail about working with issues, please peruse the \nWorking With Issues\n page.\n\n\nWhen an issue is created, it is assigned a unique identifier comprised of the slug of the parent project and the index of the issue within the project context, i.e.\n\n\n\n\nHR-1\n\n\nBARM3-14\n\n\nZICORE-9\n\n\n\n\n    Power Tip: simply typing the identifier of an issue within a comment or description field will generate\n    an interactive link to that issue.\n\n\n\n\n\n\nComponents\n\n\nIn contrast to SharePoint, \"Component\" is a predefined keyword within JIRA that is utilized for the subdivision of issues within a project.  \"Epics\" (discussed below) take the place of SharePoint components.  \n\n\nThe component attribute is most useful in projects that interact with many other projects, such as Finance and HR, but also has a place in smaller projects as a tool for indicating \"categories of work\" (i.e. Work Planning/Management/etc.).   By way of example, take a look at the currently configured components within the HR project:\n\n\n\n\nThis change makes it unnecessary to create \"subsites\" for things like Finance and HR within each project, opting instead for a clearinghouse paradigm where data is organized in a top-down fashion, rather than from the bottom-up.\n\n\nTo illustrate, let's say that you want to create a task in the (FIN) project for the procurement of widgets for the ZICORE project.  In order to do this, you would create a story or subtask under the Finance project (see \nIssue Types\n for more information on creating issues), and assign it to the ZICORE component, as shown here:\n\n\n\n\nIn the case of the majority of clearinghouse-style projects (especially Finance and HR), you would also need to select an Issue Security level before saving the issue.\n\n\n\n\nIssue Security (ISSEC) Levels\n\n\nJIRA introduces the concept of ISSEC levels to provide an additional dimension of security for \"eyes only\" data.  Not all projects utilize an ISSEC dimension, relying instead on project-level permissions for access control.  As a general rule, projects which operate according to the clearinghouse paradigm (FIN/HR/etc.) generally have an ISSEC dimension, whereas projects which are self-contained (ZICORE/BARM3/etc.) generally \ndo not\n have an ISSEC dimension.  \n\n\nThe vast majority of ISSEC dimensions follow the below pattern (where X is a project slug), arranged from highest security to lowest:\n\n\n\n\nX Restricted\n\n\nX\n\n\nNone\n\n\n\n\nIf a project does have an ISSEC dimension, a field labeled \"Security Level\" will appear on the issue creation screen for that project.  \n\n\n\n\nFrom a user perspective, you will only be able to create issues with ISSEC levels for which you have clearance, so for the majority of users, the number of choices available within a given \"Security Level\" dialog will be fairly small.  \n\n\nIt is \nimportant\n to match the ISSEC clearance with the selected component.  The rule of thumb for this is to simply ensure that the slug you select in the \"Component\" field (i.e. ZICORE) matches the leading slug of the ISSEC level you select in the \"Security Level\" field.", 
            "title": "Site Layout"
        }, 
        {
            "location": "/layout/#atlassian-documentation", 
            "text": "MCDI's JIRA installation has been designed from the ground up to mirror the best-practice concepts for structural organization as outlined by Atlassian, in an effort to ensure that their system documentation is maximally compatible with our own.  In light of that fact, an effort has been made to include links to relevant articles within the Atlassian knowledge-base for further reading where possible.  You can view an overview of JIRA Core's structure here.", 
            "title": "Atlassian Documentation"
        }, 
        {
            "location": "/layout/#quick-reference", 
            "text": "The following images are included as a quick reference guide for the key differences between JIRA and SharePoint.  Figure 1- SharePoint Terms vs JIRA Terms:   Figure 2- SharePoint Topology vs JIRA Topology:", 
            "title": "Quick Reference"
        }, 
        {
            "location": "/layout/#categories", 
            "text": "Categories are collections of projects which share a common attribute.   As an example, the category  \"MCDI Operations\"  contains the following projects:   and the category  \"MCDI Projects\"  contains the following projects:   Giving projects a parent category designation allows for more precise sectioning of structure, allowing for the support of a diverse range of business units (BUs) within a single application.", 
            "title": "Categories"
        }, 
        {
            "location": "/layout/#projects", 
            "text": "Projects are roughly analogous to \"Departments\" or \"Business Functions\" within the application context.  Projects serve as \"buckets\" for issues (see below).  Each project has a long-form name, like   Business Development  Finance  Benin ARM3   and a short-form name (\"slug\") like   BD  FIN  BARM3   The long-form name is utilized primarily for navigation within the UI, whereas the slug is used primarily for referencing issues.", 
            "title": "Projects"
        }, 
        {
            "location": "/layout/#issues", 
            "text": "The most basic \"work packet\" in JIRA is the Issue.  There are multiple types of issues, which all serve different functions.  For more detail about working with issues, please peruse the  Working With Issues  page.  When an issue is created, it is assigned a unique identifier comprised of the slug of the parent project and the index of the issue within the project context, i.e.   HR-1  BARM3-14  ZICORE-9       Power Tip: simply typing the identifier of an issue within a comment or description field will generate\n    an interactive link to that issue.", 
            "title": "Issues"
        }, 
        {
            "location": "/layout/#components", 
            "text": "In contrast to SharePoint, \"Component\" is a predefined keyword within JIRA that is utilized for the subdivision of issues within a project.  \"Epics\" (discussed below) take the place of SharePoint components.    The component attribute is most useful in projects that interact with many other projects, such as Finance and HR, but also has a place in smaller projects as a tool for indicating \"categories of work\" (i.e. Work Planning/Management/etc.).   By way of example, take a look at the currently configured components within the HR project:   This change makes it unnecessary to create \"subsites\" for things like Finance and HR within each project, opting instead for a clearinghouse paradigm where data is organized in a top-down fashion, rather than from the bottom-up.  To illustrate, let's say that you want to create a task in the (FIN) project for the procurement of widgets for the ZICORE project.  In order to do this, you would create a story or subtask under the Finance project (see  Issue Types  for more information on creating issues), and assign it to the ZICORE component, as shown here:   In the case of the majority of clearinghouse-style projects (especially Finance and HR), you would also need to select an Issue Security level before saving the issue.", 
            "title": "Components"
        }, 
        {
            "location": "/layout/#issue-security-issec-levels", 
            "text": "JIRA introduces the concept of ISSEC levels to provide an additional dimension of security for \"eyes only\" data.  Not all projects utilize an ISSEC dimension, relying instead on project-level permissions for access control.  As a general rule, projects which operate according to the clearinghouse paradigm (FIN/HR/etc.) generally have an ISSEC dimension, whereas projects which are self-contained (ZICORE/BARM3/etc.) generally  do not  have an ISSEC dimension.    The vast majority of ISSEC dimensions follow the below pattern (where X is a project slug), arranged from highest security to lowest:   X Restricted  X  None   If a project does have an ISSEC dimension, a field labeled \"Security Level\" will appear on the issue creation screen for that project.     From a user perspective, you will only be able to create issues with ISSEC levels for which you have clearance, so for the majority of users, the number of choices available within a given \"Security Level\" dialog will be fairly small.    It is  important  to match the ISSEC clearance with the selected component.  The rule of thumb for this is to simply ensure that the slug you select in the \"Component\" field (i.e. ZICORE) matches the leading slug of the ISSEC level you select in the \"Security Level\" field.", 
            "title": "Issue Security (ISSEC) Levels"
        }, 
        {
            "location": "/working_with_issues/", 
            "text": "The purpose of this guide is to provide access to detailed information regarding working with Issues (the basic unit of work within JIRA) in the context of MCDI's JIRA installation.\n\n\nAtlassian Documentation\n\n\nMCDI's JIRA installation has been designed from the ground up to mirror the best-practice concepts for structural organization as outlined by Atlassian, in an effort to ensure that their system documentation is maximally compatible with our own.  In light of that fact, an effort has been made to include links to relevant articles within the Atlassian knowledge-base for further reading where possible.\n\n\nYou can view an overview of working with issues in JIRA Core here.\n\n\n\n\nGeneral Notes\n\n\nMCDI's JIRA instance is currently configured to serve two different types of projects:\n\n\n\n\nJIRA Core\n projects, which the majority of users will utilize for day-to-day work.\n\n\nJIRA Software\n projects, which will be utilized primarily by IT for managing development activities.\n\n\n\n\nNote: A third type of project, the JIRA Helpdesk project, is supported for first-line IT and Customer Service\nfunctions, but not implemented at this time.\n\n\n\n\nDepending upon the project type, the available issue types and their use cases will change.  Please refer to the appropriate section for your use case.\n\n\nJIRA Core Issue Types\n\n\nJIRA Software Issue Types\n (not yet available)\n\n\n\n\nCreating Issues\n\n\nYou can view a generic overview of how to create issues in JIRA Core here.\n\n\n\n\nAnatomy of an Issue\n\n\nWhen accessed, each issue will display a screen like the one below.  This screen can be broken down into a number of regions, which all serve different functions.  In this section, a detailed overview of the functions and vocabulary related to each region will be laid out for easy reference, moving from the top right to the bottom left.\n\n\n\n\n\n\nIssue Header\n\n\n\n\nThe Issue Header region shows three important pieces of information:\n\n\n\n\nThe name of the parent project (ZICORE)\n\n\nThe issue's ID (ZICORE-28)\n\n\nThe name of the issue (Work Planning)\n\n\n\n\n\n\nIssue Toolbar\n\n\n\n\nThe issue toolbar gives you easy access to some of the most important functions within an issue.\n\n\n\n\nClicking the \"Edit\" button will open a form where you can edit multiple fields at once before saving.\n\n\nClicking the \"Comment\" button will snap your view to the Comment region and open an editor for you so that you can leave a comment on the issue.\n\n\nClicking the \"Assign\" button opens a dialog which allows you to reassign an issue to another user and leave a comment about the assignment change.\n\n\nClicking the \"More\" button will open a menu with advanced functions not covered here...yet.\n\n\nThe next three buttons and their usage will change depending on the workflow configured for the issue type.  Please see \nDefault Workflow Usage\n for more information.\n\n\nThe \"Admin\" button will not be visible for the majority of users, but gives access to multiple power-user functions.\n\n\nThe square button with the arrow coming out of it is the \"Share\" button.  This button reveals a dialog which will assist you in creating an external link to the issue.\n\n\nClicking the \"Export\" button will reveal a set of options for saving the issue to your local machine in various formats.\n\n\n\n\n\n\nIssue Details\n\n\n\n\nThe Issue Details region allows you to quickly view the essential metadata of an issue.\n\n\n\n\nThe \"Type\" field shows you what type of issue the issue is.  Please see \nthe issue type section for your project\n for more information.\n\n\nThe \"Priority\" field shows you the issue's current priority level.\n\n\nThe \"Component/s\" field not only shows the configured component/s for an issue, it provides hyperlinks to these components, which can be used for navigational purposes.\n\n\nThe \"Labels\" field shows all of the keywords which other users have tagged the issue with.  Labels allow users to add ad-hoc semantic search dimensions to issues for future reference.\n\n\nTo add a label, click the pencil next to the field, type in your desired label/s, and click the check mark.  \n\n\n\n\n\n\nThe \"Status\" field shows the icon for the workflow step that the issue is currently in.  \n\n\nClicking the \"View Workflow\" link will show you a flowchart for the workflow, in case you need a cheat sheet.\n\n\n\n\n\n\nThe \"Resolution\" field will be updated with a resolution message once the issue has been resolved.  Please see \nDefault Workflow Usage\n for more information regarding issue resolution.\n\n\n\n\n\n\nPeople\n\n\n\n\nThe People region gives you a window into the other users interacting with the issue alongside you.\n\n\n\n\nThe \"Assignee\" field shows you the current user assigned to the task.  \n\n\nThe Assignee role is explained in more detail on the \nDefault Workflow Usage\n page, but essentially, the Assignee is the user who needs to take the next step in moving the issue along through the workflow.  \n\n\nIf you need to take over the Assignee role, you can click the \"Assign to me\" link in order to take ownership.\n\n\n\n\n\n\nThe \"Reporter\" field shows the name of the user that initially reported the issue.  This knowledge can be useful if you're looking to find a source for more information about a given issue.\n\n\nThe \"Vote\" field shows a tally of the number of users who have clicked the \"Vote for this issue\" link, indicating that they would like it to be given priority over other issues.  \n\n\nThere is no formal requirement that issues with a high number of votes be given priority, however, this can be a useful tool for making decisions about your time when faced with multiple open issues.  \n\n\nPlease vote sparingly.\n\n\n\n\n\n\nThe \"Watchers\" field shows the number of people who are currently receiving email notifications for the issue.  \n\n\nAs a general rule, any time you interact with an issue in any way other than viewing it (i.e. changing a status, leaving a comment, etc.), you will be added to the Watchers list for that issue.  \n\n\nTo view a list of users watching the issue, simply click the number in the circle.  \n\n\nTo stop watching the issue, click the \"Stop watching this issue\" link.\n\n\nTo re-subscribe to the issue as a watcher, click the \"Start watching this issue\" link, which will replace the \"Stop watching this issue\" link when you are not subscribed.\n\n\n\n\n\n\n\n\n\n\nDescription\n\n\n\n\nThe Description region is a text field which is used to store an explanation of what the issue is for.  \n\n\n\n\nIt should include information which is relevant to assisting assigned users in moving the issue towards a resolution.\n\n\nEpics and Stories  may not always have descriptions, but Subtasks and Tasks should always have a description.  \n\n\nThe description can be edited by clicking on the Description region, or through the Edit menu.\n\n\n\n\n\n\nDates\n\n\n\n\n\n\nThe Dates region allows users to see the time and date when the issue was created, when it was last updated, and once closed, the date of closure.\n\n\n\n\n\n\nAttachments\n\n\n\n\nThe Attachments region is used to view, manage, and organize documents attached to a given issue.  JIRA's core attachment functionality has been expanded through the use of a plugin called Smart Attachments.  \nThe extended documentation for the plugin is available here.\n\n\n\n\nTo upload a new document to a task, drag the file from a folder on your computer and hold it over the issue screen.  An overlay of boxes corresponding to the different categories available for the document will appear- simply release the file over the box that corresponds to the category you would like to upload the document to, and JIRA will handle the rest of the upload process.\n\n\nThe maximum allowed file size for each individual attachment is 57.22MB.\n\n\n\n\nOnce you have uploaded attachments to an issue, the Attachments region will look something like this:\n\n\n\n\n\n\nTo move individual files between categories, simply click and drag.\n\n\nClicking on the hyperlinked filename will download a standalone copy of the file to your system.  A copy downloaded in this fashion \nwill not maintain its link to JIRA's version control.\n   \n\n\nIn order to check out the file for editing within the version control system (VCS), you will need to access the file's dropdown menu, as shown below.\n\n\n\n\n\n\n\n\nOnce you have opened the file's dropdown menu, select \"Edit in Office.\"  \nPlease note: it is only possible to edit Office documents (i.e. .docx/.xlsx/.pptx) in this fashion.\n\n\nClick \"OK\" on any warning messages that may appear, and the file will open in the appropriate Office program.\n\n\nSaving the document in Office will automatically create a new version of the file within JIRA's VCS.  To view past revisions, click the \n symbol next to a given document.\n\n\n\n\n\n\nYou can leave a comment on a document by clicking the \"Edit Comment\" button.  To view a document's comment, click the blue speech bubble displayed next to the file size.\n\n\nYou can manually add revisions to documents that cannot be opened directly in Office by selecting the \"Upload New Revision\" option from the dropdown menu.\n\n\nClicking \"Download All Revisions\" will download a .zip file containing all revisions to your local machine.\n\n\nClicking Rename will allow you to rename the file.  \n\n\nPlease note that there is a soft limit of 50-70 characters (including spaces) for filenames in JIRA.  Exceeding this limit may cause an error when opening/otherwise working with a file.  If you encounter one of these errors, simply shorten the filename to resolve the issue.  See \n!!JIRA-5\n for more information.\n\n\n\n\n\n\n\n\n\n\nHipChat\n\n\n\n\nOnce HipChat has been rolled out to the user base, you will be able to instantly create a HipChat room to discuss the issue live with all of the issue's Watchers.  This room will contain all of the information relating to the task, and features all of the hotlinking features that JIRA does (@mentions, auto-tagging, etc.).\n\n\n!!As discussed in the \n0.1.1.3 Release Notes\n, while HipChat is currently operational and fully integrated with MCDI's JIRA instance, it is not available to users at this time.\n\n\n\n\nChild Issues\n\n\nThe Child Issues region is available for the Epic, Story, and Task issue types.  Please see \nthe issue type section for your project\n for more information.\n\n\nWhile the region looks a little different when appearing under an Epic as opposed to a Story/Task (as shown below), the function of the region is the same across all issue types where it appears.\n\n\nEpic:\n\n\n\n\nStory/Task:\n\n\n\n\nThe Child Issues region shows all tasks which have a \"belongs to\" relationship with the current task.  This hierarchical structure streamlines organization and navigation, while ensuring that all related issues are grouped together in a manner that is easy to understand.\n\n\n\n\n\n\nClicking the \"+\" sign in the Child Issues region will open an \nissue creation screen\n.  Once you have created the issue, it will appear in the Child Issues region.\n\n\n\n\nImportant Note: Child Issues should always be of a type one hierarchical level below the parent.\n\n\nFor instance, when creating a child issue under an Epic, it should be of the Story/Task type; when creating a child issue under a Story/Task, it should be of the Subtask type.\n\n\n\n\n\n\n\n\nThe Child Issues region appears by default on all Epics, however, if a Story/Task does not have any subtasks associated with it, the region will not appear until at least one issue has been created.\n\n\n\n\nTo do this, click the \"More\" button on the Issue Toolbar, then select \"Create sub-task.\"\n\n\n\n\n\n\n\n\n\n\nActivity\n\n\n\n\nThe Activity region provides access to various logs related to the issue.  The vast majority of users will interact only with the \"Comments\" pane, and should leave it selected by default.\n\n\n\n\nThe \"All\" pane shows a detailed raw differential view of all changes that have been made to the issue, across all fields, \nincluding\n comments.\n\n\nThe \"Work Log\" pane shows a detailed breakdown of work logged against the issue.\n\n\nPlease note that Work Logging is not enabled outside of the [JIRA] project at this time.\n\n\n\n\n\n\nThe \"All\" pane shows a detailed raw differential view of all changes that have been made to the issue, across all fields, \nexcluding\n comments.\n\n\nThe \"Activity\" pane shows a Facebook-style view of all changes that have been made to the issue, across all fields, \nexcluding\n comments.\n\n\nThe primary difference between the \"Activity\" pane and the \"All\" pane aside from formatting is that the \"Activity\" pane does not include differential information.", 
            "title": "Working With Issues"
        }, 
        {
            "location": "/working_with_issues/#atlassian-documentation", 
            "text": "MCDI's JIRA installation has been designed from the ground up to mirror the best-practice concepts for structural organization as outlined by Atlassian, in an effort to ensure that their system documentation is maximally compatible with our own.  In light of that fact, an effort has been made to include links to relevant articles within the Atlassian knowledge-base for further reading where possible.  You can view an overview of working with issues in JIRA Core here.", 
            "title": "Atlassian Documentation"
        }, 
        {
            "location": "/working_with_issues/#general-notes", 
            "text": "MCDI's JIRA instance is currently configured to serve two different types of projects:   JIRA Core  projects, which the majority of users will utilize for day-to-day work.  JIRA Software  projects, which will be utilized primarily by IT for managing development activities.   Note: A third type of project, the JIRA Helpdesk project, is supported for first-line IT and Customer Service\nfunctions, but not implemented at this time.  Depending upon the project type, the available issue types and their use cases will change.  Please refer to the appropriate section for your use case.  JIRA Core Issue Types  JIRA Software Issue Types  (not yet available)", 
            "title": "General Notes"
        }, 
        {
            "location": "/working_with_issues/#creating-issues", 
            "text": "You can view a generic overview of how to create issues in JIRA Core here.", 
            "title": "Creating Issues"
        }, 
        {
            "location": "/working_with_issues/#anatomy-of-an-issue", 
            "text": "When accessed, each issue will display a screen like the one below.  This screen can be broken down into a number of regions, which all serve different functions.  In this section, a detailed overview of the functions and vocabulary related to each region will be laid out for easy reference, moving from the top right to the bottom left.", 
            "title": "Anatomy of an Issue"
        }, 
        {
            "location": "/working_with_issues/#issue-header", 
            "text": "The Issue Header region shows three important pieces of information:   The name of the parent project (ZICORE)  The issue's ID (ZICORE-28)  The name of the issue (Work Planning)", 
            "title": "Issue Header"
        }, 
        {
            "location": "/working_with_issues/#issue-toolbar", 
            "text": "The issue toolbar gives you easy access to some of the most important functions within an issue.   Clicking the \"Edit\" button will open a form where you can edit multiple fields at once before saving.  Clicking the \"Comment\" button will snap your view to the Comment region and open an editor for you so that you can leave a comment on the issue.  Clicking the \"Assign\" button opens a dialog which allows you to reassign an issue to another user and leave a comment about the assignment change.  Clicking the \"More\" button will open a menu with advanced functions not covered here...yet.  The next three buttons and their usage will change depending on the workflow configured for the issue type.  Please see  Default Workflow Usage  for more information.  The \"Admin\" button will not be visible for the majority of users, but gives access to multiple power-user functions.  The square button with the arrow coming out of it is the \"Share\" button.  This button reveals a dialog which will assist you in creating an external link to the issue.  Clicking the \"Export\" button will reveal a set of options for saving the issue to your local machine in various formats.", 
            "title": "Issue Toolbar"
        }, 
        {
            "location": "/working_with_issues/#issue-details", 
            "text": "The Issue Details region allows you to quickly view the essential metadata of an issue.   The \"Type\" field shows you what type of issue the issue is.  Please see  the issue type section for your project  for more information.  The \"Priority\" field shows you the issue's current priority level.  The \"Component/s\" field not only shows the configured component/s for an issue, it provides hyperlinks to these components, which can be used for navigational purposes.  The \"Labels\" field shows all of the keywords which other users have tagged the issue with.  Labels allow users to add ad-hoc semantic search dimensions to issues for future reference.  To add a label, click the pencil next to the field, type in your desired label/s, and click the check mark.      The \"Status\" field shows the icon for the workflow step that the issue is currently in.    Clicking the \"View Workflow\" link will show you a flowchart for the workflow, in case you need a cheat sheet.    The \"Resolution\" field will be updated with a resolution message once the issue has been resolved.  Please see  Default Workflow Usage  for more information regarding issue resolution.", 
            "title": "Issue Details"
        }, 
        {
            "location": "/working_with_issues/#people", 
            "text": "The People region gives you a window into the other users interacting with the issue alongside you.   The \"Assignee\" field shows you the current user assigned to the task.    The Assignee role is explained in more detail on the  Default Workflow Usage  page, but essentially, the Assignee is the user who needs to take the next step in moving the issue along through the workflow.    If you need to take over the Assignee role, you can click the \"Assign to me\" link in order to take ownership.    The \"Reporter\" field shows the name of the user that initially reported the issue.  This knowledge can be useful if you're looking to find a source for more information about a given issue.  The \"Vote\" field shows a tally of the number of users who have clicked the \"Vote for this issue\" link, indicating that they would like it to be given priority over other issues.    There is no formal requirement that issues with a high number of votes be given priority, however, this can be a useful tool for making decisions about your time when faced with multiple open issues.    Please vote sparingly.    The \"Watchers\" field shows the number of people who are currently receiving email notifications for the issue.    As a general rule, any time you interact with an issue in any way other than viewing it (i.e. changing a status, leaving a comment, etc.), you will be added to the Watchers list for that issue.    To view a list of users watching the issue, simply click the number in the circle.    To stop watching the issue, click the \"Stop watching this issue\" link.  To re-subscribe to the issue as a watcher, click the \"Start watching this issue\" link, which will replace the \"Stop watching this issue\" link when you are not subscribed.", 
            "title": "People"
        }, 
        {
            "location": "/working_with_issues/#description", 
            "text": "The Description region is a text field which is used to store an explanation of what the issue is for.     It should include information which is relevant to assisting assigned users in moving the issue towards a resolution.  Epics and Stories  may not always have descriptions, but Subtasks and Tasks should always have a description.    The description can be edited by clicking on the Description region, or through the Edit menu.", 
            "title": "Description"
        }, 
        {
            "location": "/working_with_issues/#dates", 
            "text": "The Dates region allows users to see the time and date when the issue was created, when it was last updated, and once closed, the date of closure.", 
            "title": "Dates"
        }, 
        {
            "location": "/working_with_issues/#attachments", 
            "text": "The Attachments region is used to view, manage, and organize documents attached to a given issue.  JIRA's core attachment functionality has been expanded through the use of a plugin called Smart Attachments.   The extended documentation for the plugin is available here.   To upload a new document to a task, drag the file from a folder on your computer and hold it over the issue screen.  An overlay of boxes corresponding to the different categories available for the document will appear- simply release the file over the box that corresponds to the category you would like to upload the document to, and JIRA will handle the rest of the upload process.  The maximum allowed file size for each individual attachment is 57.22MB.   Once you have uploaded attachments to an issue, the Attachments region will look something like this:    To move individual files between categories, simply click and drag.  Clicking on the hyperlinked filename will download a standalone copy of the file to your system.  A copy downloaded in this fashion  will not maintain its link to JIRA's version control.      In order to check out the file for editing within the version control system (VCS), you will need to access the file's dropdown menu, as shown below.     Once you have opened the file's dropdown menu, select \"Edit in Office.\"   Please note: it is only possible to edit Office documents (i.e. .docx/.xlsx/.pptx) in this fashion.  Click \"OK\" on any warning messages that may appear, and the file will open in the appropriate Office program.  Saving the document in Office will automatically create a new version of the file within JIRA's VCS.  To view past revisions, click the   symbol next to a given document.    You can leave a comment on a document by clicking the \"Edit Comment\" button.  To view a document's comment, click the blue speech bubble displayed next to the file size.  You can manually add revisions to documents that cannot be opened directly in Office by selecting the \"Upload New Revision\" option from the dropdown menu.  Clicking \"Download All Revisions\" will download a .zip file containing all revisions to your local machine.  Clicking Rename will allow you to rename the file.    Please note that there is a soft limit of 50-70 characters (including spaces) for filenames in JIRA.  Exceeding this limit may cause an error when opening/otherwise working with a file.  If you encounter one of these errors, simply shorten the filename to resolve the issue.  See  !!JIRA-5  for more information.", 
            "title": "Attachments"
        }, 
        {
            "location": "/working_with_issues/#hipchat", 
            "text": "Once HipChat has been rolled out to the user base, you will be able to instantly create a HipChat room to discuss the issue live with all of the issue's Watchers.  This room will contain all of the information relating to the task, and features all of the hotlinking features that JIRA does (@mentions, auto-tagging, etc.).  !!As discussed in the  0.1.1.3 Release Notes , while HipChat is currently operational and fully integrated with MCDI's JIRA instance, it is not available to users at this time.", 
            "title": "HipChat"
        }, 
        {
            "location": "/working_with_issues/#child-issues", 
            "text": "The Child Issues region is available for the Epic, Story, and Task issue types.  Please see  the issue type section for your project  for more information.  While the region looks a little different when appearing under an Epic as opposed to a Story/Task (as shown below), the function of the region is the same across all issue types where it appears.", 
            "title": "Child Issues"
        }, 
        {
            "location": "/working_with_issues/#epic", 
            "text": "", 
            "title": "Epic:"
        }, 
        {
            "location": "/working_with_issues/#storytask", 
            "text": "The Child Issues region shows all tasks which have a \"belongs to\" relationship with the current task.  This hierarchical structure streamlines organization and navigation, while ensuring that all related issues are grouped together in a manner that is easy to understand.    Clicking the \"+\" sign in the Child Issues region will open an  issue creation screen .  Once you have created the issue, it will appear in the Child Issues region.   Important Note: Child Issues should always be of a type one hierarchical level below the parent.  For instance, when creating a child issue under an Epic, it should be of the Story/Task type; when creating a child issue under a Story/Task, it should be of the Subtask type.     The Child Issues region appears by default on all Epics, however, if a Story/Task does not have any subtasks associated with it, the region will not appear until at least one issue has been created.   To do this, click the \"More\" button on the Issue Toolbar, then select \"Create sub-task.\"", 
            "title": "Story/Task:"
        }, 
        {
            "location": "/working_with_issues/#activity", 
            "text": "The Activity region provides access to various logs related to the issue.  The vast majority of users will interact only with the \"Comments\" pane, and should leave it selected by default.   The \"All\" pane shows a detailed raw differential view of all changes that have been made to the issue, across all fields,  including  comments.  The \"Work Log\" pane shows a detailed breakdown of work logged against the issue.  Please note that Work Logging is not enabled outside of the [JIRA] project at this time.    The \"All\" pane shows a detailed raw differential view of all changes that have been made to the issue, across all fields,  excluding  comments.  The \"Activity\" pane shows a Facebook-style view of all changes that have been made to the issue, across all fields,  excluding  comments.  The primary difference between the \"Activity\" pane and the \"All\" pane aside from formatting is that the \"Activity\" pane does not include differential information.", 
            "title": "Activity"
        }, 
        {
            "location": "/filters/", 
            "text": "The purpose of this article is to provide information related to the creation and usage of filters for the purpose of finding, viewing, and organizing issues within a project.\n\n\nAccessing the Filter Editor\n\n\nTo access the Filter Editor:\n\n\n\n\nNavigate to the Issues section of a project.  \n\n\nClick the \"View all issues and filters\" link in the top right.\n\n\n\n\n\n\n\n\nClick the \"New filter\" button in the top left.\n\n\n\n\n\n\n\n\nOnce you have the Filter Editor open, design your filter using the dropdown menus in the top menu bar.  \n\n\nThe issues displayed on the screen after each change will be the issues that match your filter.\n\n\n\n\n\n\nJIRA Query Language (JQL) Filtering\n\n\nShould you require additional filtering over and above the simple column filters provided in the UI, you can access the JQL interface by clicking the \"Advanced\" link.  This interface accepts query statements written in JQL, which allows you to create powerful cross-sections of data with relative ease.  \nFor more information on JQL syntax, please refer to this cheat sheet.\n\n\nSaving a Filter\n\n\nWhen you have created the filter you want, click the \"Save as\" button in the top left corner of the interface, enter a name for the filter in the \"Filter Name\" box, and click the \"Submit\" button.\n\n\n\n\nOnce the filter has been saved, you can access it from the \"View all issues and filters\" screen.  Your most used filters will appear in the \"Favorite Filters\" section of the left-hand sidebar.\n\n\n\n\nIf you have a lot of saved filters, you can choose which filters to display from the \"Find Filters \n My\" screen.\n\n\n\n\nIf you have a lot of saved filters, you can choose which filters to display in the \"Favorite Filters\" section from the \"Find Filters \n My Filters\" screen.  Clicking the star next to a given filter will toggle its visibility.", 
            "title": "Filters"
        }, 
        {
            "location": "/filters/#accessing-the-filter-editor", 
            "text": "To access the Filter Editor:   Navigate to the Issues section of a project.    Click the \"View all issues and filters\" link in the top right.     Click the \"New filter\" button in the top left.     Once you have the Filter Editor open, design your filter using the dropdown menus in the top menu bar.    The issues displayed on the screen after each change will be the issues that match your filter.", 
            "title": "Accessing the Filter Editor"
        }, 
        {
            "location": "/filters/#jira-query-language-jql-filtering", 
            "text": "Should you require additional filtering over and above the simple column filters provided in the UI, you can access the JQL interface by clicking the \"Advanced\" link.  This interface accepts query statements written in JQL, which allows you to create powerful cross-sections of data with relative ease.   For more information on JQL syntax, please refer to this cheat sheet.", 
            "title": "JIRA Query Language (JQL) Filtering"
        }, 
        {
            "location": "/filters/#saving-a-filter", 
            "text": "When you have created the filter you want, click the \"Save as\" button in the top left corner of the interface, enter a name for the filter in the \"Filter Name\" box, and click the \"Submit\" button.   Once the filter has been saved, you can access it from the \"View all issues and filters\" screen.  Your most used filters will appear in the \"Favorite Filters\" section of the left-hand sidebar.   If you have a lot of saved filters, you can choose which filters to display from the \"Find Filters   My\" screen.   If you have a lot of saved filters, you can choose which filters to display in the \"Favorite Filters\" section from the \"Find Filters   My Filters\" screen.  Clicking the star next to a given filter will toggle its visibility.", 
            "title": "Saving a Filter"
        }, 
        {
            "location": "/reports/", 
            "text": "The purpose of this article is to provide information related to the use of the stock reports included in JIRA.\n\n\nReport Dashboard\n\n\nTo access the Report Dashboard, select the \"Reports\" tab on the left-hand pane within a project.\n\n\n\n\nOnce you have reached the Report Dashboard, you can select from all of the available reports within the MCDI Jira instance.  There are a wide range of reports available by default, and \nyou can learn about them in more detail here\n.\n\n\nPlease note- any reports relying on time tracking features for data will not work, as time tracking is not enabled across MCDI's JIRA instance.", 
            "title": "Reports"
        }, 
        {
            "location": "/reports/#report-dashboard", 
            "text": "To access the Report Dashboard, select the \"Reports\" tab on the left-hand pane within a project.   Once you have reached the Report Dashboard, you can select from all of the available reports within the MCDI Jira instance.  There are a wide range of reports available by default, and  you can learn about them in more detail here .  Please note- any reports relying on time tracking features for data will not work, as time tracking is not enabled across MCDI's JIRA instance.", 
            "title": "Report Dashboard"
        }, 
        {
            "location": "/calendar/", 
            "text": "The purpose of this article is to provide information related to the creation and management of calendars in JIRA.\n\n\nMail.ru Calendar\n\n\nThe calendar functionality in JIRA is provided by the \nMail.ru plugin.\n  \n\n\n\n\nAccessing the Calendar\n\n\nTo access the calendar, click the \"Calendar\" button at the top of the screen.\n\n\n\n\n\n\nAdding a Calendar\n\n\nTo create a calendar view, click the \"Add Calendar\" button and select an option.  \n\n\n\n\nCreate New Calendar\n\n\nCreating a new calendar will allow you to define a calendar filter based on your specifications.  \n\n\n\n\nYou will first need to name your calendar and select a color for the calendar events.  Once you have configured these fields, click the \"Events\" link in the left-hand pane.\n\n\n\n\nThis screen allows you to configure your event source, which is essentially a \"feed\" of information to be displayed.  Event sources can be configured to display issues from a given project, issues caught by one of your saved \nfilters\n, or issues returned by a \nJQL query\n.  \n\n\nYou can choose what fields from the selected event source will be displayed on the calendar by entering their names in the \"Fields\" box.\n\n\n\n\nOnce you have defined your event source, you can set sharing permissions for your calendar if you would like to share it.  Granting \"USE\" rights will allow users to add your calendar to their calendar view.  Granting \"ADMIN\" rights will allow users to make configuration changes to your calendar.\n\n\n\n\nAdd Existing Calendar\n\n\nThe \"Add Existing Calendar\" screen will allow you to find and subscribe to calendars that have been shared with you.\n\n\n\n\nSimply check the checkbox next to the calendar(s) you would like to subscribe to and click the \"Add\" button.  The calendar will then appear in the right hand pane- to toggle the visibility of a given calendar, click the square next to the calendar name.\n\n\n\n\n\n\nSetting Up Calendar Sync\n\n\nOne of the most powerful features of the \nMail.ru plugin.\n is the ability to sync calendars created within JIRA to Outlook, iCalendar, iOS Calendar, Google Calendar, and other applications. Events for the past 3 months and up to 1 month in the future will be synced.\n\n\nTo sync a calendar/calendar group with Outlook, follow these steps:\n\n\n1) Click the \"Export Calendars\" button.\n\n\n\n\n2) Enter the names of the calendar(s) you would like to include in the calendar feed in the first box.\n\n\n\n\n3) Copy the link from box 2, then open the Calendar pane in Outlook and navigate to \"Open Calendar -\n From Internet...\"\n\n\n\n\n4) Enter the link you copied in step 3 into the box that appears and click OK.\n\n\n\n\n5) The following screen will appear.  Click \"Yes.\"\n\n\n\n\n6) You're all set.  The calendar will appear as \"Untitled\" under the \"Other Calendars\" heading in Outlook.  At this point, you can rename it however you like.  The calendar will automatically sync with JIRA with no further steps on your part.", 
            "title": "Calendar"
        }, 
        {
            "location": "/calendar/#mailru-calendar", 
            "text": "The calendar functionality in JIRA is provided by the  Mail.ru plugin.", 
            "title": "Mail.ru Calendar"
        }, 
        {
            "location": "/calendar/#accessing-the-calendar", 
            "text": "To access the calendar, click the \"Calendar\" button at the top of the screen.", 
            "title": "Accessing the Calendar"
        }, 
        {
            "location": "/calendar/#adding-a-calendar", 
            "text": "To create a calendar view, click the \"Add Calendar\" button and select an option.", 
            "title": "Adding a Calendar"
        }, 
        {
            "location": "/calendar/#create-new-calendar", 
            "text": "Creating a new calendar will allow you to define a calendar filter based on your specifications.     You will first need to name your calendar and select a color for the calendar events.  Once you have configured these fields, click the \"Events\" link in the left-hand pane.   This screen allows you to configure your event source, which is essentially a \"feed\" of information to be displayed.  Event sources can be configured to display issues from a given project, issues caught by one of your saved  filters , or issues returned by a  JQL query .    You can choose what fields from the selected event source will be displayed on the calendar by entering their names in the \"Fields\" box.   Once you have defined your event source, you can set sharing permissions for your calendar if you would like to share it.  Granting \"USE\" rights will allow users to add your calendar to their calendar view.  Granting \"ADMIN\" rights will allow users to make configuration changes to your calendar.", 
            "title": "Create New Calendar"
        }, 
        {
            "location": "/calendar/#add-existing-calendar", 
            "text": "The \"Add Existing Calendar\" screen will allow you to find and subscribe to calendars that have been shared with you.   Simply check the checkbox next to the calendar(s) you would like to subscribe to and click the \"Add\" button.  The calendar will then appear in the right hand pane- to toggle the visibility of a given calendar, click the square next to the calendar name.", 
            "title": "Add Existing Calendar"
        }, 
        {
            "location": "/calendar/#setting-up-calendar-sync", 
            "text": "One of the most powerful features of the  Mail.ru plugin.  is the ability to sync calendars created within JIRA to Outlook, iCalendar, iOS Calendar, Google Calendar, and other applications. Events for the past 3 months and up to 1 month in the future will be synced.  To sync a calendar/calendar group with Outlook, follow these steps:  1) Click the \"Export Calendars\" button.   2) Enter the names of the calendar(s) you would like to include in the calendar feed in the first box.   3) Copy the link from box 2, then open the Calendar pane in Outlook and navigate to \"Open Calendar -  From Internet...\"   4) Enter the link you copied in step 3 into the box that appears and click OK.   5) The following screen will appear.  Click \"Yes.\"   6) You're all set.  The calendar will appear as \"Untitled\" under the \"Other Calendars\" heading in Outlook.  At this point, you can rename it however you like.  The calendar will automatically sync with JIRA with no further steps on your part.", 
            "title": "Setting Up Calendar Sync"
        }, 
        {
            "location": "/comments/", 
            "text": "The purpose of this guide is to outline best-practice for the usage of JIRA's  comment functionality.\n\n\nAtlassian Documentation\n\n\nYou can view an overview of JIRA's comment functionality here.\n\n\nYou can view an overview of JIRA's @mention functionality here.\n\n\n\n\nBest-Practice\n\n\nJIRA's comment system is incredibly powerful, but to quote Uncle Ben, \n\"With great power comes great responsibility.\"\n\n\nIt is important to develop good habits for interacting with JIRA from the beginning, so that things don't spiral out of control and cause problems down the line.  \n\n\n\n\nGood Habit #1: Simplicity is Elegance\n\n\n\n\nTry to limit your comments to under 300 words.  This will make it easier for future users to scan through a given issue and get up to speed quickly.\n\n\nIf you need to include a lot of text, it is usually better to upload the text to the issue as a document and refer to that document in a comment instead.\n\n\n\n\n\n\nGood Habit #2: @Mention Is Your Friend\n\n\n\n\nWhen you need to get a user's attention, type the \"@\"\" sign in a comment and select the name of the user you need to notify.  This will /always/ send them an email and HipChat notification, regardless of whether or not they have been added as a Watcher to the issue.  \n\n\nIf you need a user to do something, please use \nactive\n language in your comment- be explicit about what you need from the user.\n\n\n\n\nThis is an example of a very poorly-written comment:\n\n\nWe need to order 10 widgets Joe.\n\n\nSince Joe was not @mentioned, he will not receive an email or other notifications, and the 10 widgets will\nnot be ordered.\n\n\n\n\nAnother example of a poorly-written comment:\n\n\nWe need to order 10 widgets.  @Joe @Steve.\n\n\nThis comment is not clear enough- while Joe and Steve will receive notifications, the comment does not indicate\nwhat they are supposed to do.\n\n\n\n\nThis is an example of a well-written comment:\n\n\n@Steve, we need 10 widgets, could you put together a PRF and send it to @Joe?  \n@Joe, once you receive it, please start the procurement process.\n\nThis comment makes good use of the @mention functionality, and is clear on what is needed from each @mentioned user.\n\n\n\n\n\n\nIf you're ever in doubt about whether or not to @mention a user, you should probably @mention the user.\n\n\n\n\n\n\nGood Habit #3: Edit for Clarity, Not for Content\n\n\n\n\nYou should only modify a comment that you've left to make it clearer or to fix typos.  \n\n\nYou \nshould not\n edit comments to change their overall meaning or add additional information.\n\n\nIf you feel the need to add additional information to a comment or change the content, create a new comment instead.\n\n\n\n\n\n\nGood Habit #4: Say What You Mean, Mean What You Say\n\n\n\n\nYou cannot delete comments.  This is by design.\n\n\nThis means that whatever you write will be saved forever.\n\n\nDon't say anything that you don't want to be saved forever.  There are no takebacks.", 
            "title": "Comments"
        }, 
        {
            "location": "/comments/#atlassian-documentation", 
            "text": "You can view an overview of JIRA's comment functionality here.  You can view an overview of JIRA's @mention functionality here.", 
            "title": "Atlassian Documentation"
        }, 
        {
            "location": "/comments/#best-practice", 
            "text": "JIRA's comment system is incredibly powerful, but to quote Uncle Ben,  \"With great power comes great responsibility.\"  It is important to develop good habits for interacting with JIRA from the beginning, so that things don't spiral out of control and cause problems down the line.", 
            "title": "Best-Practice"
        }, 
        {
            "location": "/comments/#good-habit-1-simplicity-is-elegance", 
            "text": "Try to limit your comments to under 300 words.  This will make it easier for future users to scan through a given issue and get up to speed quickly.  If you need to include a lot of text, it is usually better to upload the text to the issue as a document and refer to that document in a comment instead.", 
            "title": "Good Habit #1: Simplicity is Elegance"
        }, 
        {
            "location": "/comments/#good-habit-2-mention-is-your-friend", 
            "text": "When you need to get a user's attention, type the \"@\"\" sign in a comment and select the name of the user you need to notify.  This will /always/ send them an email and HipChat notification, regardless of whether or not they have been added as a Watcher to the issue.    If you need a user to do something, please use  active  language in your comment- be explicit about what you need from the user.   This is an example of a very poorly-written comment:  We need to order 10 widgets Joe. \n\nSince Joe was not @mentioned, he will not receive an email or other notifications, and the 10 widgets will\nnot be ordered.  Another example of a poorly-written comment:  We need to order 10 widgets.  @Joe @Steve. \n\nThis comment is not clear enough- while Joe and Steve will receive notifications, the comment does not indicate\nwhat they are supposed to do.  This is an example of a well-written comment:  @Steve, we need 10 widgets, could you put together a PRF and send it to @Joe?  \n@Joe, once you receive it, please start the procurement process.\n\nThis comment makes good use of the @mention functionality, and is clear on what is needed from each @mentioned user.   If you're ever in doubt about whether or not to @mention a user, you should probably @mention the user.", 
            "title": "Good Habit #2: @Mention Is Your Friend"
        }, 
        {
            "location": "/comments/#good-habit-3-edit-for-clarity-not-for-content", 
            "text": "You should only modify a comment that you've left to make it clearer or to fix typos.    You  should not  edit comments to change their overall meaning or add additional information.  If you feel the need to add additional information to a comment or change the content, create a new comment instead.", 
            "title": "Good Habit #3: Edit for Clarity, Not for Content"
        }, 
        {
            "location": "/comments/#good-habit-4-say-what-you-mean-mean-what-you-say", 
            "text": "You cannot delete comments.  This is by design.  This means that whatever you write will be saved forever.  Don't say anything that you don't want to be saved forever.  There are no takebacks.", 
            "title": "Good Habit #4: Say What You Mean, Mean What You Say"
        }, 
        {
            "location": "/workflows/", 
            "text": "The purpose of this article is to provide guidance and best practices for utilizing the default JIRA workflow.\n\n\nWorkflow Diagram\n\n\n\n\n1. Open\n\n\nWhen an issue is created, it is automatically set to the Open state.  As a rule, you should only make changes to the issue's attributes (description, priority, labels, user assignment, watchlist, etc.) when it is in the Open state.  \n\n\nWhen you create an issue, you should assign the issue to the user who is responsible for taking the next action.  If there are multiple users that will need to take action during the issue's life-cycle, ensure that you have added them to the watchlist for the issue.  \n\n\nFor more information on how to perform these operations, please see \nthe 'People' section of the 'Working With Issues' article.\n\n\n2. In Progress\n\n\nOnce an issue has been assigned to you and you begin working on it, you should advance the workflow state to In Progress using the appropriate workflow button.  When an issue is In Progress, you may upload documents, leave comments, etc.  If you need to reassign the issue to another user, you should move it back to the Open state before changing the assignment.\n\n\nFor more information on how to perform these operations, please see \nthe 'Issue Toolbar' section of the 'Working With Issues' article.\n\n\n3. Resolved\n\n\nIf you have completed all necessary work on an issue, advance it to the Resolved state.  In the \"Resolution\" field, enter a summary of the work that has been completed on the issue.  Once an issue has been marked as Resolved, no changes should be made.  If you need to make changes to a Resolved issue, please move it to the Reopened state and advance it to In Progress before doing so.\n\n\n4. Closed\n\n\nOnce an issue is marked as Resolved, project administrators should review the issue to ensure that no further work is required.  If all work has in fact been completed, the project administrator should take the following steps:\n\n\n\n\nMove all output documents to the \"Final Documents\" category within the issue.\n\n\nDownload a copy of all final documents.\n\n\nNavigate to the Documents layer for the project and create a folder under the appropriate component (+ ISSEC, if applicable) folder for the task using the following naming convention:\n\n\n\n\nProject Slug\n-\nIssue Number\n: \nIssue Summary\n\n\nExample:\n\nJIRA-6: Cold Store Symlink is Misconfigured\n\n\n\n\n\n\nUpload the final documents to the folder.\n\n\nClose the issue.\n\n\n\n\nAfter an issue has been closed, it cannot be modified unless a project administrator advances it to the Reopened state.\n\n\n5. Reopened\n\n\nThe Reopened state indicates that an issue was previously either Resolved or Closed, but further work is required.  The Reopened state is analogous to the Open state in its function and associated conventions.", 
            "title": "Default Workflow Usage"
        }, 
        {
            "location": "/workflows/#workflow-diagram", 
            "text": "", 
            "title": "Workflow Diagram"
        }, 
        {
            "location": "/workflows/#1-open", 
            "text": "When an issue is created, it is automatically set to the Open state.  As a rule, you should only make changes to the issue's attributes (description, priority, labels, user assignment, watchlist, etc.) when it is in the Open state.    When you create an issue, you should assign the issue to the user who is responsible for taking the next action.  If there are multiple users that will need to take action during the issue's life-cycle, ensure that you have added them to the watchlist for the issue.    For more information on how to perform these operations, please see  the 'People' section of the 'Working With Issues' article.", 
            "title": "1. Open"
        }, 
        {
            "location": "/workflows/#2-in-progress", 
            "text": "Once an issue has been assigned to you and you begin working on it, you should advance the workflow state to In Progress using the appropriate workflow button.  When an issue is In Progress, you may upload documents, leave comments, etc.  If you need to reassign the issue to another user, you should move it back to the Open state before changing the assignment.  For more information on how to perform these operations, please see  the 'Issue Toolbar' section of the 'Working With Issues' article.", 
            "title": "2. In Progress"
        }, 
        {
            "location": "/workflows/#3-resolved", 
            "text": "If you have completed all necessary work on an issue, advance it to the Resolved state.  In the \"Resolution\" field, enter a summary of the work that has been completed on the issue.  Once an issue has been marked as Resolved, no changes should be made.  If you need to make changes to a Resolved issue, please move it to the Reopened state and advance it to In Progress before doing so.", 
            "title": "3. Resolved"
        }, 
        {
            "location": "/workflows/#4-closed", 
            "text": "Once an issue is marked as Resolved, project administrators should review the issue to ensure that no further work is required.  If all work has in fact been completed, the project administrator should take the following steps:   Move all output documents to the \"Final Documents\" category within the issue.  Download a copy of all final documents.  Navigate to the Documents layer for the project and create a folder under the appropriate component (+ ISSEC, if applicable) folder for the task using the following naming convention:   Project Slug - Issue Number :  Issue Summary \n\nExample:\n\nJIRA-6: Cold Store Symlink is Misconfigured   Upload the final documents to the folder.  Close the issue.   After an issue has been closed, it cannot be modified unless a project administrator advances it to the Reopened state.", 
            "title": "4. Closed"
        }, 
        {
            "location": "/workflows/#5-reopened", 
            "text": "The Reopened state indicates that an issue was previously either Resolved or Closed, but further work is required.  The Reopened state is analogous to the Open state in its function and associated conventions.", 
            "title": "5. Reopened"
        }, 
        {
            "location": "/core_issue_types/", 
            "text": "The purpose of this article is to provide access detailed information about the types of issues in MCDI's JIRA Core projects, and their proper usage.\n\n\nHierarchy\n\n\nIssues in JIRA are organized into a parent-child hierarchy under a given JIRA Core project, as illustrated below.\n\n\n\n\nEpics\n\n\nAn epic captures a large body of work. It is essentially a large undertaking (similar to a SharePoint \"Component\") that can be broken down into a number of smaller stories (similar to SharePoint \"Activities\").\n\n\nThe average user \nshould not\n have a business need to create an Epic, unless directed to do so by a superior.  When in doubt, please refer to the \nIssue Type Decision Tree\n.\n\n\nIssue Type Decision Tree", 
            "title": "Core Issue Types"
        }, 
        {
            "location": "/core_issue_types/#hierarchy", 
            "text": "Issues in JIRA are organized into a parent-child hierarchy under a given JIRA Core project, as illustrated below.", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/core_issue_types/#epics", 
            "text": "An epic captures a large body of work. It is essentially a large undertaking (similar to a SharePoint \"Component\") that can be broken down into a number of smaller stories (similar to SharePoint \"Activities\").  The average user  should not  have a business need to create an Epic, unless directed to do so by a superior.  When in doubt, please refer to the  Issue Type Decision Tree .", 
            "title": "Epics"
        }, 
        {
            "location": "/core_issue_types/#issue-type-decision-tree", 
            "text": "", 
            "title": "Issue Type Decision Tree"
        }, 
        {
            "location": "/software_issue_types/", 
            "text": "This section is not yet available.  IT resources that require information about the JIRA Software/JIRA Service Desk subsystems should refer to the following Atlassian manuals in the interim:\n\n\n\n\nJIRA Software Manual.\n\n\nJIRA Service Desk Manual.", 
            "title": "Software Issue Types"
        }, 
        {
            "location": "/plugin_documents/", 
            "text": "Description\n\n\nThis add-on lets you manage and store files in JIRA on a project level. It enables key-features of an advanced document management system like folders hierarchy, file uploading, version history, permissions and many more.\n\n\nVendor\n\n\nThis is a \nStonikByte\n plugin.\n\n\nDocumentation\n\n\nDocumentation for this plugin can be found here\n\n\nUsage\n\n\nThe Documentation plugin is utilized to provide the cold DM layer across projects.\n\n\nNotes\n\n\nAs of \nRelease 0.1.1.3\n, we are considering sunsetting/removing this plugin prior to the Open Beta, as it does not appear to be meeting the use cases it was intended for.", 
            "title": "Documents"
        }, 
        {
            "location": "/plugin_documents/#description", 
            "text": "This add-on lets you manage and store files in JIRA on a project level. It enables key-features of an advanced document management system like folders hierarchy, file uploading, version history, permissions and many more.", 
            "title": "Description"
        }, 
        {
            "location": "/plugin_documents/#vendor", 
            "text": "This is a  StonikByte  plugin.", 
            "title": "Vendor"
        }, 
        {
            "location": "/plugin_documents/#documentation", 
            "text": "Documentation for this plugin can be found here", 
            "title": "Documentation"
        }, 
        {
            "location": "/plugin_documents/#usage", 
            "text": "The Documentation plugin is utilized to provide the cold DM layer across projects.", 
            "title": "Usage"
        }, 
        {
            "location": "/plugin_documents/#notes", 
            "text": "As of  Release 0.1.1.3 , we are considering sunsetting/removing this plugin prior to the Open Beta, as it does not appear to be meeting the use cases it was intended for.", 
            "title": "Notes"
        }, 
        {
            "location": "/plugin_hipchat/", 
            "text": "Description\n\n\n\n\nReceive notifications about important events for your JIRA project HipChat (new JIRA issues, new comments, etc.)\n\n\nMention issue keys in HipChat rooms and receive a summary of the issue directly in chat to avoid context switching\n\n\nFrom a JIRA issue, create a dedicated HipChat room and bring everyone together to discuss it - for example to resolve an incident faster!\n\n\nConfigure JIRA with HipChat with a simple wizard you can complete in 30 seconds.\n\n\nOne-click linking of JIRA projects and HipChat rooms. This can be done both by global administrators and project administrators.\n\n\nSupports HipChat Cloud and HipChat Server.\n\n\n\n\nVendor\n\n\nThis is an Atlassian plugin.\n\n\nDocumentation\n\n\nDocumentation for this plugin can be found here\n\n\nUsage\n\n\nThe HipChat for JIRA plugin is used to manage the integration of \nAtlassian HipChat\n into JIRA.\n\n\nNotes\n\n\nThis plugin operates more like a feature than as an extension- it simply enables the integration of the two services, regardless of hosting endpoint (i.e. Atlassian Cloud vs. Self-Hosted).", 
            "title": "HipChat for JIRA"
        }, 
        {
            "location": "/plugin_hipchat/#description", 
            "text": "Receive notifications about important events for your JIRA project HipChat (new JIRA issues, new comments, etc.)  Mention issue keys in HipChat rooms and receive a summary of the issue directly in chat to avoid context switching  From a JIRA issue, create a dedicated HipChat room and bring everyone together to discuss it - for example to resolve an incident faster!  Configure JIRA with HipChat with a simple wizard you can complete in 30 seconds.  One-click linking of JIRA projects and HipChat rooms. This can be done both by global administrators and project administrators.  Supports HipChat Cloud and HipChat Server.", 
            "title": "Description"
        }, 
        {
            "location": "/plugin_hipchat/#vendor", 
            "text": "This is an Atlassian plugin.", 
            "title": "Vendor"
        }, 
        {
            "location": "/plugin_hipchat/#documentation", 
            "text": "Documentation for this plugin can be found here", 
            "title": "Documentation"
        }, 
        {
            "location": "/plugin_hipchat/#usage", 
            "text": "The HipChat for JIRA plugin is used to manage the integration of  Atlassian HipChat  into JIRA.", 
            "title": "Usage"
        }, 
        {
            "location": "/plugin_hipchat/#notes", 
            "text": "This plugin operates more like a feature than as an extension- it simply enables the integration of the two services, regardless of hosting endpoint (i.e. Atlassian Cloud vs. Self-Hosted).", 
            "title": "Notes"
        }, 
        {
            "location": "/plugin_mail_ru/", 
            "text": "Description\n\n\nThe plugin displays issues from any project or filter in calendar format. Custom field values are used as event data.\n\n\n\n\nQuarter, Month, Week, Day and Timelime views\n\n\nOptional weekends hiding\n\n\nView issue fields data in event popup\n\n\nSharing calendars with other users\n\n\nDrag \n Drop support\n\n\nExport calendars to Outlook, iCalendar, iOS Calendar, Google Calendar\n\n\n\n\nVendor\n\n\nThis is a \nMail.Ru Group\n plugin.\n\n\nDocumentation\n\n\nDocumentation for this plugin can be found here\n\n\nUsage\n\n\nThe Mail.Ru Calendar plugin powers the Calendar feature in MCDI's JIRA.\n\n\nNotes\n\n\nSee the \nCalendar section of this documentation\n for more information.", 
            "title": "Mail.Ru Calendar"
        }, 
        {
            "location": "/plugin_mail_ru/#description", 
            "text": "The plugin displays issues from any project or filter in calendar format. Custom field values are used as event data.   Quarter, Month, Week, Day and Timelime views  Optional weekends hiding  View issue fields data in event popup  Sharing calendars with other users  Drag   Drop support  Export calendars to Outlook, iCalendar, iOS Calendar, Google Calendar", 
            "title": "Description"
        }, 
        {
            "location": "/plugin_mail_ru/#vendor", 
            "text": "This is a  Mail.Ru Group  plugin.", 
            "title": "Vendor"
        }, 
        {
            "location": "/plugin_mail_ru/#documentation", 
            "text": "Documentation for this plugin can be found here", 
            "title": "Documentation"
        }, 
        {
            "location": "/plugin_mail_ru/#usage", 
            "text": "The Mail.Ru Calendar plugin powers the Calendar feature in MCDI's JIRA.", 
            "title": "Usage"
        }, 
        {
            "location": "/plugin_mail_ru/#notes", 
            "text": "See the  Calendar section of this documentation  for more information.", 
            "title": "Notes"
        }, 
        {
            "location": "/plugin_smart_attachments/", 
            "text": "Description\n\n\nSmart Attachments is a real catch when you work with multiple attachments in each JIRA issue. Now you can easily manage them, as follows:\n\n\n\n\nCreate categories per issue types and further distribute attachments among categories\n\n\nDrag and drop files to or among attachment categories\n\n\nUse revisions for keeping distinct file versions within one document\n\n\nEdit your documents, workbooks, presentations and drawings in MS Office\n\n\nSend attachments to emails of your colleagues and partners from JIRA\n\n\nSearch for issues with attachments by name, format, document name or uploader\n\n\nCustomize attachment management experience with validators, conditions and post-functions\n\n\nComment the already loaded files and revisions\n\n\nRestrict access to certain categories for users, groups or roles\n\n\nPerform bulk actions (group removal, archive download, category migration or archivation to category)\n\n\nImport configuration from other JIRA projects\n\n\n\n\nVendor\n\n\nThis is a \nStiltSoft\n plugin.\n\n\nDocumentation\n\n\nDocumentation for this plugin can be found here\n\n\nUsage\n\n\nThe Smart Attachments plugin provides advanced document management functionality for JIRA.\n\n\nNotes\n\n\nSee the \nAttachments section of the \"Working With Issues\" section of this documentation\n for more information.", 
            "title": "Smart Attachments"
        }, 
        {
            "location": "/plugin_smart_attachments/#description", 
            "text": "Smart Attachments is a real catch when you work with multiple attachments in each JIRA issue. Now you can easily manage them, as follows:   Create categories per issue types and further distribute attachments among categories  Drag and drop files to or among attachment categories  Use revisions for keeping distinct file versions within one document  Edit your documents, workbooks, presentations and drawings in MS Office  Send attachments to emails of your colleagues and partners from JIRA  Search for issues with attachments by name, format, document name or uploader  Customize attachment management experience with validators, conditions and post-functions  Comment the already loaded files and revisions  Restrict access to certain categories for users, groups or roles  Perform bulk actions (group removal, archive download, category migration or archivation to category)  Import configuration from other JIRA projects", 
            "title": "Description"
        }, 
        {
            "location": "/plugin_smart_attachments/#vendor", 
            "text": "This is a  StiltSoft  plugin.", 
            "title": "Vendor"
        }, 
        {
            "location": "/plugin_smart_attachments/#documentation", 
            "text": "Documentation for this plugin can be found here", 
            "title": "Documentation"
        }, 
        {
            "location": "/plugin_smart_attachments/#usage", 
            "text": "The Smart Attachments plugin provides advanced document management functionality for JIRA.", 
            "title": "Usage"
        }, 
        {
            "location": "/plugin_smart_attachments/#notes", 
            "text": "See the  Attachments section of the \"Working With Issues\" section of this documentation  for more information.", 
            "title": "Notes"
        }, 
        {
            "location": "/0140_12062016/", 
            "text": "ITWG Project Rollout\n\n\n\n\nThe IT Working Group (ITWG) project has been rolled out.  Tasks relating to IT roadmapping, research, and development should be entered under this project.\n\n\nEdit and View rights for the ITWG project are currently restricted to members of the IT Working Group.  Users outside of the working group who require View rights should be manually added to the Read Only project role.\n\n\n\n\n\n\nITHD Push Notification Routing\n\n\n\n\nFixed a bug that was causing push notifications from the ITHD project to be routed to all users in the jira-software-users group.  See \n!JIRATEK-20\n for more information.\n\n\n\n\n\n\nMulti-Country Project Conventions\n\n\n\n\nProjects that operate in multiple countries should utilize the Component functionality within the project to create components for each country in which the project operates.  \n\n\nNew projects \nshould not\n be created for each distinct country.\n\n\nJIRA supports the assignment of multiple components to an issue, so Project Admins are free to assign additional components as they see fit.\n\n\nSee \n!JIRATEK-21\n for more information.\n\n\n!JIRATEK-22\n is an example of implementing a proper country Component configuration scheme.\n\n\n\n\n\n\nJIRATEK Access Permissions Change\n\n\n\n\nThe jira-software-users group has been added to the Standard project role in the JIRATEK project.\n\n\nUsers should log tickets relating to the operation and development of the JIRA system itself within the JIRATEK project.  \n\n\nSee \n!JIRATEK-23\n for more information on this change.\n\n\n\n\n\n\nSmart Attachments Updated to v1.14.0\n\n\n\n\nNow you can discuss individual attachments or attachment revisions in separate comment threads as it is possible in Confluence.\n\n\nAdded validation of special symbols when renaming attachments in JIRA.\n\n\nExtended the set of events collected by Google Analytics.\n\n\nRead the full patch notes here.\n\n\n\n\n\n\nMaintenance Activities\n\n\n\n\nThe JIRA server has been updated.\n\n\nThe JIRA index has been rebuilt.", 
            "title": "0.1.4.0 (12/06/2016)"
        }, 
        {
            "location": "/0140_12062016/#itwg-project-rollout", 
            "text": "The IT Working Group (ITWG) project has been rolled out.  Tasks relating to IT roadmapping, research, and development should be entered under this project.  Edit and View rights for the ITWG project are currently restricted to members of the IT Working Group.  Users outside of the working group who require View rights should be manually added to the Read Only project role.", 
            "title": "ITWG Project Rollout"
        }, 
        {
            "location": "/0140_12062016/#ithd-push-notification-routing", 
            "text": "Fixed a bug that was causing push notifications from the ITHD project to be routed to all users in the jira-software-users group.  See  !JIRATEK-20  for more information.", 
            "title": "ITHD Push Notification Routing"
        }, 
        {
            "location": "/0140_12062016/#multi-country-project-conventions", 
            "text": "Projects that operate in multiple countries should utilize the Component functionality within the project to create components for each country in which the project operates.    New projects  should not  be created for each distinct country.  JIRA supports the assignment of multiple components to an issue, so Project Admins are free to assign additional components as they see fit.  See  !JIRATEK-21  for more information.  !JIRATEK-22  is an example of implementing a proper country Component configuration scheme.", 
            "title": "Multi-Country Project Conventions"
        }, 
        {
            "location": "/0140_12062016/#jiratek-access-permissions-change", 
            "text": "The jira-software-users group has been added to the Standard project role in the JIRATEK project.  Users should log tickets relating to the operation and development of the JIRA system itself within the JIRATEK project.    See  !JIRATEK-23  for more information on this change.", 
            "title": "JIRATEK Access Permissions Change"
        }, 
        {
            "location": "/0140_12062016/#smart-attachments-updated-to-v1140", 
            "text": "Now you can discuss individual attachments or attachment revisions in separate comment threads as it is possible in Confluence.  Added validation of special symbols when renaming attachments in JIRA.  Extended the set of events collected by Google Analytics.  Read the full patch notes here.", 
            "title": "Smart Attachments Updated to v1.14.0"
        }, 
        {
            "location": "/0140_12062016/#maintenance-activities", 
            "text": "The JIRA server has been updated.  The JIRA index has been rebuilt.", 
            "title": "Maintenance Activities"
        }, 
        {
            "location": "/0131_12012016/", 
            "text": "Transition of MCDI IT Case Handling to JIRA\n\n\nFrom: Eric Dimbleby\n\n\nSubject: MCDI IT Help Desk Request Protocol\n\n\nDate: 12/1/2016\n\n\nRecipients: All MCDI Staff, Both Field and Home Office\n\n\nGood Afternoon,\n\n\nIn an effort to better track our day to day help desk requests in the MCDI division (and eventually in the other\ndivisions as well), we are asking that all MCDI helpdesk requests be submitted through JIRA. Given the various\nprojects Dave is currently working on through the end of the year and into 2017, a more concerted effort to share,\ntrack, and triage responses from I.T. is underway. Matt McSpadden, based out of our Augusta office, has graciously\noffered his monitoring and assistance for this range of issues, in a hope that we can allow Dave more time to\nfocus on the JIRA roll-out and a list of other important projects he is ramping up. For anything that requires\nonsite work, Matt will work with Dave directly.\n\n\nField Office Personnel\nWe would also request that all field office personnel have their Home Office contact create new requests.\nHow To Log Your Issue\nTo create a new issue for IT Support, please click the CREATE button at the top of the screen in JIRA, and report\nyour issue to the \nITHD Project\n. For more details on creating issues, reference the \nAtlassian documentation\n.\n\n\nThank you in advance for following this protocol.\n\n\n\n\nMaintenance Activities\n\n\n\n\nThe JIRA server has been updated and restarted.  Server state post-maintenance is below.\n\n\n\n\nWelcome to Ubuntu 16.04.1 LTS (GNU/Linux 4.4.0-51-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/advantage\n\n  System information as of Thu Dec  1 22:02:56 UTC 2016\n\n  System load:  0.36              Processes:           147\n  Usage of /:   5.1% of 98.30GB   Users logged in:     0\n  Memory usage: 4%                IP address for eth0: [REDACTED]\n  Swap usage:   0%\n\n  Graph this data and manage this system at:\n    https://landscape.canonical.com/\n\n  Get cloud support with Ubuntu Advantage Cloud Guest:\n    http://www.ubuntu.com/business/services/cloud\n\n0 packages can be updated.\n0 updates are security updates.\n\n\nToday is Setting Orange, the 43rd day of The Aftermath in the YOLD 3182\n\n\n\n\n\n\nITHD Access Modified\n\n\n\n\nStandard level access to the ITHD project has been granted to all users in the jira-software-users group.\n\n\n\n\n\n\nSTORJ Client Installed\n\n\n\n\nmcdi-jira-prod is now running the STORJ client (\ndocumentation can be found here\n).  Application-level users will not see a change at this time.  \n\n\nDevelopment of a backup system to accommodate the STORJ DEMFS (Distributed Encrypted Mesh File-Store) architecture is ongoing.", 
            "title": "0.1.3.1 (12/01/2016)"
        }, 
        {
            "location": "/0131_12012016/#transition-of-mcdi-it-case-handling-to-jira", 
            "text": "From: Eric Dimbleby  Subject: MCDI IT Help Desk Request Protocol  Date: 12/1/2016  Recipients: All MCDI Staff, Both Field and Home Office  Good Afternoon,  In an effort to better track our day to day help desk requests in the MCDI division (and eventually in the other\ndivisions as well), we are asking that all MCDI helpdesk requests be submitted through JIRA. Given the various\nprojects Dave is currently working on through the end of the year and into 2017, a more concerted effort to share,\ntrack, and triage responses from I.T. is underway. Matt McSpadden, based out of our Augusta office, has graciously\noffered his monitoring and assistance for this range of issues, in a hope that we can allow Dave more time to\nfocus on the JIRA roll-out and a list of other important projects he is ramping up. For anything that requires\nonsite work, Matt will work with Dave directly.  Field Office Personnel\nWe would also request that all field office personnel have their Home Office contact create new requests.\nHow To Log Your Issue\nTo create a new issue for IT Support, please click the CREATE button at the top of the screen in JIRA, and report\nyour issue to the  ITHD Project . For more details on creating issues, reference the  Atlassian documentation .  Thank you in advance for following this protocol.", 
            "title": "Transition of MCDI IT Case Handling to JIRA"
        }, 
        {
            "location": "/0131_12012016/#maintenance-activities", 
            "text": "The JIRA server has been updated and restarted.  Server state post-maintenance is below.   Welcome to Ubuntu 16.04.1 LTS (GNU/Linux 4.4.0-51-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/advantage\n\n  System information as of Thu Dec  1 22:02:56 UTC 2016\n\n  System load:  0.36              Processes:           147\n  Usage of /:   5.1% of 98.30GB   Users logged in:     0\n  Memory usage: 4%                IP address for eth0: [REDACTED]\n  Swap usage:   0%\n\n  Graph this data and manage this system at:\n    https://landscape.canonical.com/\n\n  Get cloud support with Ubuntu Advantage Cloud Guest:\n    http://www.ubuntu.com/business/services/cloud\n\n0 packages can be updated.\n0 updates are security updates.\n\n\nToday is Setting Orange, the 43rd day of The Aftermath in the YOLD 3182", 
            "title": "Maintenance Activities"
        }, 
        {
            "location": "/0131_12012016/#ithd-access-modified", 
            "text": "Standard level access to the ITHD project has been granted to all users in the jira-software-users group.", 
            "title": "ITHD Access Modified"
        }, 
        {
            "location": "/0131_12012016/#storj-client-installed", 
            "text": "mcdi-jira-prod is now running the STORJ client ( documentation can be found here ).  Application-level users will not see a change at this time.    Development of a backup system to accommodate the STORJ DEMFS (Distributed Encrypted Mesh File-Store) architecture is ongoing.", 
            "title": "STORJ Client Installed"
        }, 
        {
            "location": "/0130_12012016/", 
            "text": "Open Beta Rollout\n\n\n\n\nThe following projects have been enabled for use:\n\n\nBARM3\n\n\nPADNET\n\n\nMalariaCare\n\n\nGSF\n\n\nExecutive\n\n\n\n\nBase Issue Type Scheme Added\n\n\n\n\nIn order to customize issue types from project to project as needed, it was necessary to create a \"Base Issue Type Scheme\" and associate it with all Business projects. - This will allow us to modify the issue types for each individual project if necessary.\n\n\nSee the \n\"How to edit default issue type scheme\" thread on Atlassian Answers\n and \n!JIRATEK-13\n for more information on the reasoning behind this change.\n\n\n\n\nIT Project Key Change\n\n\n\n\nThe IT project's key has been changed from (IT) to (ITHD) to fix an incoming mailer configuration string-match bug.\n\n\nThe ITHD project has been wired to the ITHD.incoming endpoint.\n\n\n\n\nPreparations for the Transition of MCDI IT Case Handling to JIRA\n\n\n\n\nThe ITHD project has been wired to all notification services, with an additional default notification route targeting the help@mcd.org inbox.  See \n!JIRATEK-16\n for more information.\n\n\nThe ITHD project has been moved to a custom Issue Type Scheme to provide proper functionality.  See \n!JIRATEK-15\n for more information.\n\n\n\n\nThe current configuration is shown below:", 
            "title": "0.1.3.0 (12/01/2016)"
        }, 
        {
            "location": "/0130_12012016/#open-beta-rollout", 
            "text": "The following projects have been enabled for use:  BARM3  PADNET  MalariaCare  GSF  Executive", 
            "title": "Open Beta Rollout"
        }, 
        {
            "location": "/0130_12012016/#base-issue-type-scheme-added", 
            "text": "In order to customize issue types from project to project as needed, it was necessary to create a \"Base Issue Type Scheme\" and associate it with all Business projects. - This will allow us to modify the issue types for each individual project if necessary.  See the  \"How to edit default issue type scheme\" thread on Atlassian Answers  and  !JIRATEK-13  for more information on the reasoning behind this change.", 
            "title": "Base Issue Type Scheme Added"
        }, 
        {
            "location": "/0130_12012016/#it-project-key-change", 
            "text": "The IT project's key has been changed from (IT) to (ITHD) to fix an incoming mailer configuration string-match bug.  The ITHD project has been wired to the ITHD.incoming endpoint.", 
            "title": "IT Project Key Change"
        }, 
        {
            "location": "/0130_12012016/#preparations-for-the-transition-of-mcdi-it-case-handling-to-jira", 
            "text": "The ITHD project has been wired to all notification services, with an additional default notification route targeting the help@mcd.org inbox.  See  !JIRATEK-16  for more information.  The ITHD project has been moved to a custom Issue Type Scheme to provide proper functionality.  See  !JIRATEK-15  for more information.   The current configuration is shown below:", 
            "title": "Preparations for the Transition of MCDI IT Case Handling to JIRA"
        }, 
        {
            "location": "/0121_11162016/", 
            "text": "JIRA Project Key Change\n\n\n\n\nThe JIRA project's key has been changed from (JIRA) to (JIRATEK) to fix an incoming mailer configuration string-match bug.\n\n\nThe JIRA project has been wired to the JIRATEK.incoming endpoint.\n\n\n\n\nReindexing\n\n\n\n\nThe JIRA project has been rebuilt to accommodate this change.", 
            "title": "0.1.2.1 (11/16/2016)"
        }, 
        {
            "location": "/0121_11162016/#jira-project-key-change", 
            "text": "The JIRA project's key has been changed from (JIRA) to (JIRATEK) to fix an incoming mailer configuration string-match bug.  The JIRA project has been wired to the JIRATEK.incoming endpoint.", 
            "title": "JIRA Project Key Change"
        }, 
        {
            "location": "/0121_11162016/#reindexing", 
            "text": "The JIRA project has been rebuilt to accommodate this change.", 
            "title": "Reindexing"
        }, 
        {
            "location": "/0120_11162016/", 
            "text": "EGCCST Rollout\n\n\n\n\nThe EGCCST project has been activated.\n\n\nThe EGCCST project is wired to listen for incoming mail at the EGCCST.incoming endpoint.\n\n\nEGCCST components have been added to the FIN and HR projects.\n\n\nEGCCST and EGCCST Restricted ISSEC dimensions have been added to the FIN and HR ISSEC Schemes.\n\n\nThe EGCCST project has been linked to the EG-CCST HipChat room.\n\n\n\n\nPlugin Updates\n\n\n\n\nThe \nHipChat for JIRA\n plugin has been updated to \nv. 7.8.28.\n\n\nThe \nDocuments\n plugin has been updated to \nv. 6.2.1\n\n\nThe Atlassian Universal Plugin Manager has been updated to \nv. 2.22\n\n\n\n\nReindexing\n\n\n\n\nPerformed background reindexing at 10:21AM EST on 11/16/2016.", 
            "title": "0.1.2.0 (11/16/2016)"
        }, 
        {
            "location": "/0120_11162016/#egccst-rollout", 
            "text": "The EGCCST project has been activated.  The EGCCST project is wired to listen for incoming mail at the EGCCST.incoming endpoint.  EGCCST components have been added to the FIN and HR projects.  EGCCST and EGCCST Restricted ISSEC dimensions have been added to the FIN and HR ISSEC Schemes.  The EGCCST project has been linked to the EG-CCST HipChat room.", 
            "title": "EGCCST Rollout"
        }, 
        {
            "location": "/0120_11162016/#plugin-updates", 
            "text": "The  HipChat for JIRA  plugin has been updated to  v. 7.8.28.  The  Documents  plugin has been updated to  v. 6.2.1  The Atlassian Universal Plugin Manager has been updated to  v. 2.22", 
            "title": "Plugin Updates"
        }, 
        {
            "location": "/0120_11162016/#reindexing", 
            "text": "Performed background reindexing at 10:21AM EST on 11/16/2016.", 
            "title": "Reindexing"
        }, 
        {
            "location": "/0113_11032016/", 
            "text": "HipChat Integration, Phase I\n\n\n\n\nHipChat (Cloud) is now wired to JIRA with the following hardlinks:\n\n\n\n\n\n\n\n\nThis feature is currently being tested in a \npassive\n configuration to fine-tune push notifications.  The current default settings are shown below:\n\n\n\n\n\n\n\n\n\n\nCurrent JIRA users will not be able to utilize the HipChat integration features present on issues until we move to an \nactive\n configuration.\n\n\n\n\n\n\nWe are aiming to roll out HipChat alongside the Open Beta.  For more information on the Open Beta, see \n!!JIRA-7\n.\n\n\n\n\n\n\nThe @mcd.org domain has been enabled for automatic HipChat verification.  In theory, all we will need to do in order to push out invites is to release our HipChat invite URL.\n\n\n\n\n\n\nApplied Fix JIRA-6\n\n\n\n\nFixed a configuration problem that was storing attachments on the root volume instead of the storage volume.  See \n!!JIRA-6\n for more information.", 
            "title": "0.1.1.3 (11/03/2016)"
        }, 
        {
            "location": "/0113_11032016/#hipchat-integration-phase-i", 
            "text": "HipChat (Cloud) is now wired to JIRA with the following hardlinks:     This feature is currently being tested in a  passive  configuration to fine-tune push notifications.  The current default settings are shown below:      Current JIRA users will not be able to utilize the HipChat integration features present on issues until we move to an  active  configuration.    We are aiming to roll out HipChat alongside the Open Beta.  For more information on the Open Beta, see  !!JIRA-7 .    The @mcd.org domain has been enabled for automatic HipChat verification.  In theory, all we will need to do in order to push out invites is to release our HipChat invite URL.", 
            "title": "HipChat Integration, Phase I"
        }, 
        {
            "location": "/0113_11032016/#applied-fix-jira-6", 
            "text": "Fixed a configuration problem that was storing attachments on the root volume instead of the storage volume.  See  !!JIRA-6  for more information.", 
            "title": "Applied Fix JIRA-6"
        }, 
        {
            "location": "/0112_11022016/", 
            "text": "Comment deletion restricted to jira-administrators.\n\n\n\n\nRemoved the \"Delete Own Comments\" permission for all users outside the jira-administrators group.\n\n\nRemoved the \"Delete All Comments\" permission for all users outside the jira-administrators group.", 
            "title": "0.1.1.2 (11/02/2016)"
        }, 
        {
            "location": "/0112_11022016/#comment-deletion-restricted-to-jira-administrators", 
            "text": "Removed the \"Delete Own Comments\" permission for all users outside the jira-administrators group.  Removed the \"Delete All Comments\" permission for all users outside the jira-administrators group.", 
            "title": "Comment deletion restricted to jira-administrators."
        }, 
        {
            "location": "/0111_10312016/", 
            "text": "Documentation Linked to JIRA\n\n\n\n\nAdded link to documentation site to JIRA MoTD.", 
            "title": "0.1.1.1 (10/31/2016)"
        }, 
        {
            "location": "/0111_10312016/#documentation-linked-to-jira", 
            "text": "Added link to documentation site to JIRA MoTD.", 
            "title": "Documentation Linked to JIRA"
        }, 
        {
            "location": "/0110_10312016/", 
            "text": "Soft Launch\n\n\nAfter discussions with Ed, we have decided to migrate work on ZICORE to JIRA, owing to the fact that it is our newest project, and work on it will be continuing on into the new year.  To that end, I have moved all tasks, comments, and attachments to the new system, \nwhich can be accessed here\n.\n\n\nThe URL for the system will be changed to something easy to remember once we go live, but as we are still technically in development, we need to leave it alone for the time being.  I would suggest creating a bookmark for the current URL to save yourselves time.\n\n\nOver the next few minutes, I will be sending you each invitation emails, which will contain all of the login information necessary for you to get started.  \n\n\nOutlook Signature\n\n\nINCREDIBLY IMPORTANT NOTE:\nYOU MUST UPDATE YOUR OUTLOOK SIGNATURE TO INCLUDE 5 MINUS SIGNS/DASHES BEFORE THE SIGNATURE PRIOR TO USING JIRA.\n\n\nIf you do not do this, replying to a JIRA email to leave a comment or create an attachment to a task will copy the entire email chain into the comment and make a huge, huge mess.  \n\n\nThere is no other available workaround.\n\n\nIf you do make this change, you can reply to any JIRA email to leave a comment on a task, and any attachments to that email will be automatically uploaded to the task, which is really neat.  \n\n\nOutlook Labeling\n\n\nI would also HIGHLY recommend creating an Outlook filter to move all emails with [JIRA] in the subject line to a separate folder.  You will be receiving a lot of emails, as JIRA sends updates whenever something changes.  We will be tuning this moving forward, but at the beginning it will be a lot to keep up with if you have it coming directly into your inbox.\n\n\nStructural Notes\n\n\nThe general \u201cJIRA Metaphor\u201d for the SharePoint structure we have presently is as follows:\n\n\n\n\nEpics roughly equate to SharePoint \u201cComponents\u201d\n\n\nStories roughly equate to SharePoint \u201cActivities\u201d\n\n\nSubtasks roughly equate to SharePoint \u201cTasks\u201d\n\n\n\n\nI have already taken the liberty of creating the following Epics for ZICORE:\n\n\n\n\nZICORE-1: Field Office Administration\n\n\nZICORE-14: Home Office Administration\n\n\nFIN-1: ZICORE Field Finance\n\n\nFIN-4: ZICORE Home Finance\n\n\nHR-7: ZICORE Field HR\n\n\nHR-12: ZICORE Home HR\n\n\n\n\nGeneral Usage Notes\n\n\nTo create a Story (think of it like a category of tasks with a common goal) within an Epic, click the + sign next to \u201cIssues in Epic,\u201d select \u201cStory\u201d under Issue Type, and fill in the requested information.  \n\n\nTo create a Subtask within a Story, click on the Story, then click \u201cMore \n Create Sub-Task,\u201d and fill in the requested information.\n\n\nDocuments can be attached to all issue types by simply dragging and dropping from your desktop.  Document categories can be assigned by dragging and dropping the document between categories on the issue screen.\n\n\nIssue Security levels can be adjusted for Epics and Stories within the HR and Finance projects (ZICORE would be the equivalent of \u201cZicore HR\u201d and ZICORE Restricted would be the equivalent of \u201cZicore HR-Restricted).  Subtasks inherit security levels from their parent.  \n\n\nTo tag a user in a comment or description, simply type the \u201c@\u201d sign followed by the user\u2019s name, i.e. @Pablo, and select the user from the box that appears.  \n\n\nIf you have finished the work that you need to do on a subtask, but further work is required from another user, change the \u201cAssignee\u201d field to reflect the person that needs to take the next steps.  Only one user can be assigned to an issue at any given time.\n\n\nOnce you have accepted the invitation to set up your JIRA account, please allow 10 minutes for your permissions to be set up.\n\n\nClosing Remarks\n\n\nPlease do not hesitate to \ncontact me\n with any questions, comments, or concerns.  This is a big transition, and there will undoubtedly be hiccups- it is my hope, however, that we can use this pilot project to polish the system before rolling out across the organization, and make sure that everyone has a great experience with it once it\u2019s live.\n\n\nPlease note that the information contained within these release notes may be duplicated elsewhere within the documentation, as it is currently a work in progress.", 
            "title": "0.1.1.0 (10/31/2016)"
        }, 
        {
            "location": "/0110_10312016/#soft-launch", 
            "text": "After discussions with Ed, we have decided to migrate work on ZICORE to JIRA, owing to the fact that it is our newest project, and work on it will be continuing on into the new year.  To that end, I have moved all tasks, comments, and attachments to the new system,  which can be accessed here .  The URL for the system will be changed to something easy to remember once we go live, but as we are still technically in development, we need to leave it alone for the time being.  I would suggest creating a bookmark for the current URL to save yourselves time.  Over the next few minutes, I will be sending you each invitation emails, which will contain all of the login information necessary for you to get started.", 
            "title": "Soft Launch"
        }, 
        {
            "location": "/0110_10312016/#outlook-signature", 
            "text": "INCREDIBLY IMPORTANT NOTE:\nYOU MUST UPDATE YOUR OUTLOOK SIGNATURE TO INCLUDE 5 MINUS SIGNS/DASHES BEFORE THE SIGNATURE PRIOR TO USING JIRA.  If you do not do this, replying to a JIRA email to leave a comment or create an attachment to a task will copy the entire email chain into the comment and make a huge, huge mess.    There is no other available workaround.  If you do make this change, you can reply to any JIRA email to leave a comment on a task, and any attachments to that email will be automatically uploaded to the task, which is really neat.", 
            "title": "Outlook Signature"
        }, 
        {
            "location": "/0110_10312016/#outlook-labeling", 
            "text": "I would also HIGHLY recommend creating an Outlook filter to move all emails with [JIRA] in the subject line to a separate folder.  You will be receiving a lot of emails, as JIRA sends updates whenever something changes.  We will be tuning this moving forward, but at the beginning it will be a lot to keep up with if you have it coming directly into your inbox.", 
            "title": "Outlook Labeling"
        }, 
        {
            "location": "/0110_10312016/#structural-notes", 
            "text": "The general \u201cJIRA Metaphor\u201d for the SharePoint structure we have presently is as follows:   Epics roughly equate to SharePoint \u201cComponents\u201d  Stories roughly equate to SharePoint \u201cActivities\u201d  Subtasks roughly equate to SharePoint \u201cTasks\u201d   I have already taken the liberty of creating the following Epics for ZICORE:   ZICORE-1: Field Office Administration  ZICORE-14: Home Office Administration  FIN-1: ZICORE Field Finance  FIN-4: ZICORE Home Finance  HR-7: ZICORE Field HR  HR-12: ZICORE Home HR", 
            "title": "Structural Notes"
        }, 
        {
            "location": "/0110_10312016/#general-usage-notes", 
            "text": "To create a Story (think of it like a category of tasks with a common goal) within an Epic, click the + sign next to \u201cIssues in Epic,\u201d select \u201cStory\u201d under Issue Type, and fill in the requested information.    To create a Subtask within a Story, click on the Story, then click \u201cMore   Create Sub-Task,\u201d and fill in the requested information.  Documents can be attached to all issue types by simply dragging and dropping from your desktop.  Document categories can be assigned by dragging and dropping the document between categories on the issue screen.  Issue Security levels can be adjusted for Epics and Stories within the HR and Finance projects (ZICORE would be the equivalent of \u201cZicore HR\u201d and ZICORE Restricted would be the equivalent of \u201cZicore HR-Restricted).  Subtasks inherit security levels from their parent.    To tag a user in a comment or description, simply type the \u201c@\u201d sign followed by the user\u2019s name, i.e. @Pablo, and select the user from the box that appears.    If you have finished the work that you need to do on a subtask, but further work is required from another user, change the \u201cAssignee\u201d field to reflect the person that needs to take the next steps.  Only one user can be assigned to an issue at any given time.  Once you have accepted the invitation to set up your JIRA account, please allow 10 minutes for your permissions to be set up.", 
            "title": "General Usage Notes"
        }, 
        {
            "location": "/0110_10312016/#closing-remarks", 
            "text": "Please do not hesitate to  contact me  with any questions, comments, or concerns.  This is a big transition, and there will undoubtedly be hiccups- it is my hope, however, that we can use this pilot project to polish the system before rolling out across the organization, and make sure that everyone has a great experience with it once it\u2019s live.  Please note that the information contained within these release notes may be duplicated elsewhere within the documentation, as it is currently a work in progress.", 
            "title": "Closing Remarks"
        }
    ]
}